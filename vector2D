class vecteur2d() :
    # def __init__(self) :
    #     self.absise= x
    #     self.ordone= y
    def __init__(self,x,y) :
        self.absise= x
        self.ordone= y
    def info(self) :
        print(" le absise est : " , self.absise)
        print(" le ordone  est : " , self.ordone)
    def norme(self) :
        return (self.absise**2) +(self.ordone**2)**(1/2)
    def equals(self,W) :  
        if  (self.absise==W.absise) and  (self.ordone==W.ordone) :
         return True
        else :
         return False
     def tostring(self) :
         print( "X=",self.absise,"-Y=",self.ordone )     
        
a=vecteur2d(20,60) 
b=vecteur2d(20,60) 

a.info()
print("la norme est : ",a.norme())
print("LES 2 VECTS SONT EGALS ? ",a.equals(b))
a.tostring()

//////////
print("PARTIE VECTEUR 3 DIMENSION ")
/////////

class vecteur3d(vecteur2d) : 
    def __init__(self,x,y,z) :
        self.absise= x
        self.ordone= y
        self.z=z
    def infoz(self) :
        print("le absise est :" , self.absise)
        print("le ordone  est :" , self.ordone) 
        print("le Z  est :" , self.z) 
     def norm(self) :
            return ((self.absise**2) +(self.ordone**2) +(self.z**2))**(1/2)
     def equal(self,W) :  
        if  (self.absise==W.absise) and  (self.ordone==W.ordone) and (self.z==W.z):
         return True
        else :
         return False
    def string(self) :
         print( "X=",self.absise,"-Y=",self.ordone ,"+Z=",self.z)     
X=vecteur3d(11,22,43) 
Z=vecteur3d(11,22,43)       

X.infoz()
print("la norme DU VECT 3 DIMENSION :",X.norm())
print("les 2 VECTS EGAUX ? ", X.equal(Z))
        
